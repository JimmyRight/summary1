Nouveautés de Python
********************

La série d’essais « Quoi de neuf dans Python » reprend les plus
importants changements entres les versions majeures de Python. Elles
sont à lire pour quiconque souhaitant être à jour suite à une nouvelle
sortie.

* Nouveautés de Python 2.7

  * The Future for Python 2.x

  * Changes to the Handling of Deprecation Warnings

  * Python 3.1 Features

  * PEP 372: Adding an Ordered Dictionary to collections

  * PEP 378: Format Specifier for Thousands Separator

  * PEP 389: The argparse Module for Parsing Command Lines

  * PEP 391: Dictionary-Based Configuration For Logging

  * PEP 3106: Dictionary Views

  * PEP 3137: The memoryview Object

  * Other Language Changes

  * New and Improved Modules

  * Build and C API Changes

  * Autres changements et corrections

  * Portage vers Python 2.7

  * New Features Added to Python 2.7 Maintenance Releases

  * Acknowledgements

* Nouveautés de Python 2.6

  * Python 3.0

  * Changes to the Development Process

  * PEP 343: The “with” statement

  * PEP 366: Explicit Relative Imports From a Main Module

  * PEP 370: Per-user "site-packages" Directory

  * PEP 371: The "multiprocessing" Package

  * PEP 3101: Advanced String Formatting

  * PEP 3105: "print" As a Function

  * PEP 3110: Exception-Handling Changes

  * PEP 3112: Byte Literals

  * PEP 3116: New I/O Library

  * PEP 3118: Revised Buffer Protocol

  * PEP 3119: Abstract Base Classes

  * PEP 3127: Integer Literal Support and Syntax

  * PEP 3129: Class Decorators

  * PEP 3141: A Type Hierarchy for Numbers

  * Other Language Changes

  * New and Improved Modules

  * Deprecations and Removals

  * Build and C API Changes

  * Portage vers Python 2.6

  * Acknowledgements

* Nouveautés de Python 2.5

  * PEP 308 : Expressions conditionnelles

  * PEP 309 : Application partielle de fonction

  * PEP 314: Metadata for Python Software Packages v1.1

  * PEP 328: Absolute and Relative Imports

  * PEP 338: Executing Modules as Scripts

  * PEP 341: Unified try/except/finally

  * PEP 342: New Generator Features

  * PEP 343: The “with” statement

  * PEP 352: Exceptions as New-Style Classes

  * PEP 353: Using ssize_t as the index type

  * PEP 357: The “__index__” method

  * Other Language Changes

  * Modules ajoutés, modifiés, et supprimés

  * Build and C API Changes

  * Portage vers Python 2.5

  * Acknowledgements

* Nouveautés de Python 2.4

  * PEP 218: Built-In Set Objects

  * PEP 237: Unifying Long Integers and Integers

  * PEP 289: Generator Expressions

  * PEP 292: Simpler String Substitutions

  * PEP 318: Decorators for Functions and Methods

  * PEP 322: Reverse Iteration

  * PEP 324: New subprocess Module

  * PEP 327: Decimal Data Type

  * PEP 328: Multi-line Imports

  * PEP 331: Locale-Independent Float/String Conversions

  * Other Language Changes

  * New, Improved, and Deprecated Modules

  * Build and C API Changes

  * Portage vers Python 2.4

  * Acknowledgements

* Nouveautés de Python 2.3

  * PEP 218: A Standard Set Datatype

  * PEP 255 : Générateurs simples

  * PEP 263: Source Code Encodings

  * PEP 273: Importing Modules from ZIP Archives

  * PEP 277: Unicode file name support for Windows NT

  * PEP 278: Universal Newline Support

  * PEP 279: enumerate()

  * PEP 282: The logging Package

  * PEP 285 : Un type booléen

  * PEP 293: Codec Error Handling Callbacks

  * PEP 301: Package Index and Metadata for Distutils

  * PEP 302: New Import Hooks

  * PEP 305: Comma-separated Files

  * PEP 307: Pickle Enhancements

  * Extended Slices

  * Other Language Changes

  * New, Improved, and Deprecated Modules

  * Pymalloc: A Specialized Object Allocator

  * Build and C API Changes

  * Autres changements et corrections

  * Portage vers Python 2.3

  * Acknowledgements

* Nouveautés de Python 2.2

  * Introduction

  * PEP 252 et 253 : Changements concernant les types et classes

  * PEP 234 : Itérateurs

  * PEP 255 : Générateurs simples

  * PEP 237: Unifying Long Integers and Integers

  * PEP 238: Changing the Division Operator

  * Unicode Changes

  * PEP 227: Nested Scopes

  * New and Improved Modules

  * Interpreter Changes and Fixes

  * Autres changements et corrections

  * Acknowledgements

* Nouveautés de Python 2.1

  * Introduction

  * PEP 227: Nested Scopes

  * PEP 236 : Directives __future__

  * PEP 207: Rich Comparisons

  * PEP 230: Warning Framework

  * PEP 229: New Build System

  * PEP 205: Weak References

  * PEP 232 : Attributs de fonctions

  * PEP 235: Importing Modules on Case-Insensitive Platforms

  * PEP 217: Interactive Display Hook

  * PEP 208: New Coercion Model

  * PEP 241: Metadata in Python Packages

  * New and Improved Modules

  * Autres changements et corrections

  * Acknowledgements

* Nouveautés de Python 2.0

  * Introduction

  * À propos de Python 1.6

  * Nouveau processus de développement

  * Unicode

  * Compréhensions de listes

  * Augmented Assignment

  * Méthodes de chaînes de caractères

  * Garbage Collection of Cycles

  * Other Core Changes

  * Porting to 2.0

  * Extending/Embedding Changes

  * Distutils: Making Modules Easy to Install

  * Modules XML

  * Module changes

  * Nouveaux modules

  * IDLE Improvements

  * Deleted and Deprecated Modules

  * Acknowledgements
